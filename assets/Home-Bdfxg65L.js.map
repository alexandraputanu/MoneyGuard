{"version":3,"file":"Home-Bdfxg65L.js","sources":["../../src/helpers/transactionsFormatter.js","../../src/components/TransactionItem/TransactionItem.jsx","../../src/components/TransactionList/TransactionList.jsx","../../src/components/AddButton/AddButton.jsx","../../src/components/Home/Home.jsx"],"sourcesContent":["export function getFormattedTransactions(transactions, categories) {\r\n    return transactions.map(transaction => getFormattedTransaction(transaction, categories)).toSorted((a, b) => b.date.localeCompare(a.date));\r\n}\r\n\r\nfunction getFormattedTransaction(transaction, categories) {\r\n    const { transactionDate: date, amount: sum, categoryId, type, comment, id } = transaction;\r\n    const newTransaction = {\r\n        id,\r\n        date,\r\n        type: type === 'EXPENSE' ? '-' : '+',\r\n        category: getCategoryName(categoryId, categories),\r\n        comment,\r\n        sum: `${Math.abs(sum)} lei`, // Adaugă simbolul monedei aici\r\n    };\r\n    return newTransaction;\r\n}\r\n\r\nfunction getCategoryName(id, categories) {\r\n    const cat = [...categories].find(item => item.id === id);\r\n    return cat?.name || 'Invalid';\r\n}\r\n\r\nexport function getHeadTransaction() {\r\n    return ['date', 'type', 'category', 'comment', 'sum'];\r\n}\r\n\r\nexport function getStyleByType(type) {\r\n    const currentColor = type === '-' ? 'var(--red-color)' : 'var(--yellow-color)';\r\n    return {\r\n        color: currentColor,\r\n    };\r\n}\r\n","import clsx from 'clsx';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nimport useMedia from '../../hooks/useMedia';\r\nimport { deleteTransactions } from '../../redux/Transactions/operations';\r\nimport { openEditModal, addEditId } from '../../redux/Modals/slice';\r\nimport { getStyleByType } from '../../helpers/transactionsFormatter';\r\n\r\nimport s from './TransactionItem.module.css';\r\nimport { Icon } from '../../Icons';\r\nimport { getBalanceThunk } from '../../redux/Auth/operations';\r\n\r\nfunction TransactionItem({ transaction, id }) {\r\n    const dispatch = useDispatch();\r\n    const { isMobile } = useMedia();\r\n    const [isModalOpen, setIsModalOpen] = useState(false); // Adaugăm starea internă pentru modal\r\n\r\n    const idForModal = id;\r\n    const style = getStyleByType(transaction.type);\r\n\r\n    function onEdit() {\r\n        if (!isModalOpen) {\r\n            const newId = idForModal;\r\n            dispatch(addEditId(newId));\r\n            dispatch(openEditModal());\r\n            setIsModalOpen(true); // Setăm modalul ca fiind deschis\r\n        }\r\n    }\r\n\r\n    async function OnDelete() {\r\n        await dispatch(deleteTransactions(id));\r\n        dispatch(getBalanceThunk());\r\n    }\r\n\r\n    return isMobile ? (\r\n        <ul className={s.card} style={style}>\r\n            {[...Object.keys(transaction)].map((tKey, idx) => {\r\n                return (\r\n                    <li key={idx} className={s.row}>\r\n                        <span className={s.row_item}>{tKey}</span>\r\n                        <span className={s.row_item}>{transaction[tKey]}</span>\r\n                    </li>\r\n                );\r\n            })}\r\n\r\n            <li className={s.row}>\r\n                <button type=\"button\" className={clsx(s.btn_edit, s.row_item)} onClick={onEdit}>\r\n                    <Icon id=\"#icon-pen\" className={s.edit}></Icon>\r\n                </button>\r\n                <button type=\"button\" className={clsx(s.colored, 'btn_delete')} onClick={OnDelete}>\r\n                    Delete\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    ) : (\r\n        <>\r\n            <ul className={s.row} style={style}>\r\n                {[...Object.values(transaction)].map((value, idx) => {\r\n                    return (\r\n                        <li key={idx} className={s.row_item}>\r\n                            {value}\r\n                        </li>\r\n                    );\r\n                })}\r\n                <li className={clsx(s.row_item, s.controls)}>\r\n                    <button type=\"button\" className={s.btn_edit} onClick={onEdit}>\r\n                        <Icon id=\"#icon-pen\" className={s.edit}></Icon>\r\n                    </button>\r\n                    <button type=\"button\" className={clsx(s.colored, 'btn_delete')} onClick={OnDelete}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransactionItem;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectTransError, selectTransLoading, selectTransactions } from '../../redux/Transactions/selectors';\r\nimport { selectCategories } from '../../redux/Statistics/selectors';\r\nimport { getFormattedTransactions, getHeadTransaction } from '../../helpers/transactionsFormatter';\r\n\r\nimport s from './TransactionList.module.css';\r\nimport Loader from '../Loader/Loader';\r\nimport TransactionItem from '../TransactionItem/TransactionItem';\r\nimport FormButton from '../common/FormButton/FormButton';\r\nimport { openAddModal } from '../../redux/Modals/slice';\r\nimport useMedia from '../../hooks/useMedia';\r\n\r\nfunction TransactionList() {\r\n    const reduxTransactions = useSelector(selectTransactions);\r\n    const isLoading = useSelector(selectTransLoading);\r\n    const isError = useSelector(selectTransError);\r\n    const categories = useSelector(selectCategories);\r\n\r\n    const { isMobile } = useMedia();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loader />}\r\n            {isError && <p className={s.text}>Oops, something went wrong...</p>}\r\n            {!isLoading && reduxTransactions.length === 0 ? (\r\n                <div className={s.container}>\r\n                    <p>No transactions available yet.</p> <p> Let&#39;s add your first transaction:</p>\r\n                    <FormButton type=\"button\" text={'Add transaction'} variant={'multiColorButton'} handlerFunction={() => dispatch(openAddModal())} />\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {!isMobile && (\r\n                        <ul className={s.head_row}>\r\n                            {getHeadTransaction().map((value, idx) => {\r\n                                return (\r\n                                    <li key={idx} className={s.row_item}>\r\n                                        {value}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                            <li className={s.row_item}></li>\r\n                        </ul>\r\n                    )}\r\n                    <ul className={s.list}>\r\n                        {getFormattedTransactions(reduxTransactions, categories).map(({ id, ...item }) => {\r\n                            return <TransactionItem key={id} id={id} transaction={item} />;\r\n                        })}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransactionList;\r\n","import { Icon } from '../../Icons';\r\nimport s from './AddButton.module.css';\r\nimport { openAddModal } from '../../redux/Modals/slice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst AddButton = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            <button\r\n                className={s.btn}\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    dispatch(openAddModal());\r\n                }}\r\n            >\r\n                <Icon id=\"#icon-plus\" className={s.icon} ></Icon>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddButton;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getTransactions } from '../../redux/Transactions/operations';\r\nimport { getTransactionsCategories } from '../../redux/Statistics/operations';\r\nimport TransactionList from '../TransactionList/TransactionList';\r\nimport AddButton from '../AddButton/AddButton';\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getTransactions());\r\n        dispatch(getTransactionsCategories());\r\n    }, [dispatch]);\r\n    return (\r\n        <>\r\n            <TransactionList />\r\n            <AddButton></AddButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["getFormattedTransactions","transactions","categories","transaction","getFormattedTransaction","a","b","date","sum","categoryId","type","comment","id","getCategoryName","cat","item","getHeadTransaction","getStyleByType","TransactionItem","dispatch","useDispatch","isMobile","useMedia","isModalOpen","setIsModalOpen","useState","idForModal","style","onEdit","addEditId","openEditModal","OnDelete","deleteTransactions","getBalanceThunk","jsxs","s","tKey","idx","jsx","clsx","Icon","Fragment","value","TransactionList","reduxTransactions","useSelector","selectTransactions","isLoading","selectTransLoading","isError","selectTransError","selectCategories","Loader","FormButton","openAddModal","AddButton","Home","useEffect","getTransactions","getTransactionsCategories"],"mappings":"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"}